/**
 * Claude Command Toolkit - 一体化API
 *
 * 输入Claude Code命令参数 → 直接返回安装结果
 */
import type { CommandOptions, CommandResult, SubagentOptions, SubagentResult } from './types/index.js';
/**
 * Claude Code资源构建器 - 一体化API
 *
 * 📋 方法分组说明:
 * 🚀 主要API(2个) - 对外提供的核心接口
 * 🔍 参数验证(2个) - 确保用户输入合法性
 * 🔧 内容生成(2个) - 将配置转换为标准格式
 * 🧹 工具方法(1个) - 提供通用的名称清理功能
 *
 * 每个主要API都遵循相同的6步流程：验证→生成→路径→写入→成功→错误处理
 */
export declare class ClaudeCodeBuilder {
    /**
     * 🚀 主要API #1: 创建并安装Claude Code命令（一步完成）
     *
     * 这是对外的核心接口，将用户的命令配置转换为Claude Code可用的命令文件
     *
     * @param options 命令参数 - 用户提供的所有配置选项
     * @returns 安装结果 - 包含成功状态、文件路径、错误信息等
     */
    static createCommand(options: CommandOptions): Promise<CommandResult>;
    /**
     * 🚀 主要API #2: 创建并安装Claude Code Subagent（一步完成）
     *
     * 这是对外的核心接口，将用户的subagent配置转换为Claude Code可用的代理文件
     *
     * @param options subagent参数 - 用户提供的代理配置选项
     * @returns 安装结果 - 包含成功状态、文件路径、错误信息等
     */
    static createSubagent(options: SubagentOptions): Promise<SubagentResult>;
    /**
     * 🔧 内部方法: 生成命令内容 - 为 createCommand() API 服务
     *
     * 将用户的命令选项转换为Claude Code标准的frontmatter格式文件
     * 这是 createCommand() 第2步调用的核心格式化方法
     */
    private static generateContent;
    /**
     * 🔍 内部方法: 验证命令输入参数 - 为 createCommand() API 服务
     *
     * 检查用户提供的命令选项是否符合要求
     * 这是 createCommand() 第1步调用的参数校验方法
     */
    private static validateOptions;
    /**
     * 🔍 内部方法: 验证Subagent输入参数 - 为 createSubagent() API 服务
     *
     * 检查用户提供的subagent选项是否符合要求
     * 这是 createSubagent() 第1步调用的参数校验方法
     */
    private static validateSubagentOptions;
    /**
     * 🔧 内部方法: 生成Subagent内容 - 为 createSubagent() API 服务
     *
     * 将用户的subagent选项转换为Claude Code标准的代理文件格式
     * 这是 createSubagent() 第2步调用的核心格式化方法
     */
    private static generateSubagentContent;
    /**
     * 🧹 内部方法: 清理命令名称 - 为两个主要API服务
     *
     * 将用户输入的名称转换为安全的文件名格式
     * 这是两个API第3步调用的文件名规范化方法，确保生成的文件名符合系统要求
     */
    private static sanitizeName;
}
export type { CommandOptions, CommandResult, SubagentOptions, SubagentResult } from './types/index.js';
export default ClaudeCodeBuilder;
