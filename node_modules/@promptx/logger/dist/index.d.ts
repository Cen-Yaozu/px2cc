import pino from 'pino';

interface LoggerConfig {
    level?: string;
    console?: boolean;
    file?: boolean | {
        dirname?: string;
    };
    colors?: boolean;
}
declare function createLogger(config?: LoggerConfig): pino.Logger;
declare const logger: pino.Logger<never, boolean>;
declare const error: (msg: string | object, ...args: any[]) => void;
declare const warn: (msg: string | object, ...args: any[]) => void;
declare const info: (msg: string | object, ...args: any[]) => void;
declare const debug: (msg: string | object, ...args: any[]) => void;
declare const verbose: (msg: string | object, ...args: any[]) => void;
declare const log: (level: string, msg: string, ...args: any[]) => void;

type Logger = pino.Logger;
type LogLevel = 'fatal' | 'error' | 'warn' | 'info' | 'debug' | 'trace';

export { type LogLevel, type Logger, type LoggerConfig, createLogger, debug, logger as default, error, info, log, verbose, warn };
